package org.example.bundles;

import java.util.ListResourceBundle;

public class AppointmentOperationResources extends ListResourceBundle {
    private Object[][] contents = {
            {"id", "ID"},
            {"save", "Save"},
            {"cancel", "Cancel"},
            {"dataLostNotification", "All unsaved data in text fields will be lost."},
            {"confirmationQuestion", "Are you OK with this?"},
            {"noEmptyFields", "Please fill out all empty fields."},
            {"overlappingAppointmentError", "This appointment overlaps with another appointment for this customer and cannot be added. Overlapping appointment:"},
            {"appointmentId", "Appointment ID"},
            {"appointmentStart", "Appointment Start"},
            {"appointmentEnd", "Appointment End"},
            {"outsideOfWorkHours", "All appointments must be scheduled within work hours: 8 A.M - 10 P.M. EST"},
            {"endTimeBeforeStartTimeError", "End time must be after selected start time."},
            {"endDateBeforeStartDateError", "End date can not be a date prior to the selected start date."},
            {"invalidCustomerIdError", "The Customer ID entered for this appointment does not match a Customer in the database. Please enter a valid Customer ID."},
            {"invalidUserIdError", "The user ID entered for this appointment does not correspond to a database user. Please enter a valid user ID."},
            {"title", "Title"},
            {"description", "Description"},
            {"type", "Type"},
            {"location", "Location"},
            {"startDate", "Start Date"},
            {"startTime", "Start Time"},
            {"endDate", "End Date"},
            {"endTime", "End Time"},
            {"customerId", "Customer ID"},
            {"contact", "Contact"},
            {"userId", "User ID"},
            {"addAppointment", "Add Appointment"},
            {"modifyAppointment", "Modify Appointment"},
            {"timeFormat", "Enter times in 24 Hour format: HH:MM"},
            {"invalidHourError", "Hours must be in 24 hour format between 0-23"},
            {"invalidMinuteError", "Minutes must be between 0-59"},
            {"save", "Save"},
            {"cancel", "Cancel"},
            {"autoGenerated", "Auto Generated"}
    };

    @Override
    protected Object[][] getContents() {
        return contents;
    }
}
